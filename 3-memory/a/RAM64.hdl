/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    /* The 3 least significant bit select one of the RAM8 chips to load input */
    /* The 3 most significant bit select which register is set to the RAM8 chip */
    DMux8Way (in=load, sel=address[0..2], a=load0, b=load1, c=load2, d=load3, e=load4, f=load5, g=load6, h=load7);

    RAM8 (in=in, load=load0, address=address[3..5], out=ram0);
    RAM8 (in=in, load=load1, address=address[3..5], out=ram1);
    RAM8 (in=in, load=load2, address=address[3..5], out=ram2);
    RAM8 (in=in, load=load3, address=address[3..5], out=ram3);
    RAM8 (in=in, load=load4, address=address[3..5], out=ram4);
    RAM8 (in=in, load=load5, address=address[3..5], out=ram5);
    RAM8 (in=in, load=load6, address=address[3..5], out=ram6);
    RAM8 (in=in, load=load7, address=address[3..5], out=ram7);

    Mux8Way16 (a=ram0, b=ram1, c=ram2, d=ram3, e=ram4,f=ram5, g=ram6, h=ram7, sel=address[0..2], out=out);
}

